-- Answers for COSC 304 Lab 3 Assignment

-- Q1: Return the product names, price, inventory, and inventory value of each product (`price*inventory`) (rename as `inventoryValue`) for products with price greater than `$20`. Order by product name ascending.

SELECT pname, price, inventory, price*inventory AS inventoryValue
FROM product
WHERE price > 20
ORDER BY pname ASC;

+-------------------------+-----------+-----------+----------------+
| pname                   | price     | inventory | inventoryValue |
+-------------------------+-----------+-----------+----------------+
| Deluxe Sweet Collection |     32.65 |        83 |        2709.95 |
| Desk                    |    250.99 |       100 |       25099.00 |
| Sports Car              | 123500.00 |         0 |           0.00 |
| Swiss Chocolate         |     32.99 |        40 |        1319.60 |
| Table                   |    500.00 |        44 |       22000.00 |
| Textbook                |    250.00 |        23 |        5750.00 |
| Wooden Chair            |     99.99 |        12 |        1199.88 |
+-------------------------+-----------+-----------+----------------+


-- Q2: Return the customer id, name, state, and shipment date for all customers in `'BC'` or `'IA'` that have had a shipment in `2022`. Order by `shipdate` descending.

SELECT customer.cid, cname, state, shipdate
FROM customer JOIN shipment ON customer.cid = shipment.cid
WHERE YEAR(shipdate) = 2022 AND (state = 'BC' OR state = 'IA')
ORDER BY shipdate DESC;

+-----+--------------+-------+---------------------+
| cid | cname        | state | shipdate            |
+-----+--------------+-------+---------------------+
|  11 | Aiden Adams  | BC    | 2022-09-24 00:00:00 |
|  10 | Suzanne May  | IA    | 2022-08-26 00:00:00 |
|   9 | Beth Rosebud | IA    | 2022-08-24 00:00:00 |
|  12 | Betty Bains  | BC    | 2022-08-24 00:00:00 |
|  15 | Elish Elias  | BC    | 2022-08-24 00:00:00 |
+-----+--------------+-------+---------------------+

-- Q3: Find all customers that either have the word `'street'` in their street address or have no street address. 

SELECT *
FROM customer
WHERE address LIKE '%street%' OR address IS NULL;

+-----+-----------------+---------------------+-----------+-------+
| cid | cname           | address             | city      | state |
+-----+-----------------+---------------------+-----------+-------+
|   2 | Joe Smithsonian | 245 Straight Street | Iowa City | IA    |
|   8 | Shannon Rose    | NULL                | Wyandotte | MI    |
|   9 | Beth Rosebud    | 1 First Street      | Muscatine | IA    |
|  10 | Suzanne May     | 2 Second Street     | Iowa City | IA    |
|  11 | Aiden Adams     | 324 2A Street       | Kelowna   | BC    |
|  12 | Betty Bains     | NULL                | Kelowna   | BC    |
|  13 | Cindy Champion  | 1 1st Street        | Calgary   | AB    |
|  14 | David Denter    | 23456 Main Street   | Vernon    | BC    |
+-----+-----------------+---------------------+-----------+-------+


-- Q4: Return a list of the unique city and states of customers. Order output by `state` descending.

SELECT DISTINCT city, state
FROM customer
ORDER BY state DESC;

+------------------+-------+
| city             | state |
+------------------+-------+
| Morristown       | NJ    |
| Detroit          | MI    |
| Wyandotte        | MI    |
| Chicago          | IL    |
| Springfield      | IL    |
| Iowa City        | IA    |
| Muscatine        | IA    |
| Hollywood        | CA    |
| Huntington Beach | CA    |
| Kelowna          | BC    |
| Lake Country     | BC    |
| Vernon           | BC    |
| Calgary          | AB    |
+------------------+-------+


-- Q5: For each city, return the number of customers in that city and the number of shipments for customers in that city. **Hint: COUNT(DISTINCT *field*) may be useful.** Only show cities with at least 2 shipments. Order by number of shipments descending.

SELECT city, COUNT(DISTINCT C.cid) AS numCustomers, COUNT(sid) as numShipments
FROM customer AS C JOIN shipment AS S ON C.cid = S.cid
GROUP BY city
HAVING numShipments >= 2
ORDER BY numShipments DESC;

+------------------+--------------+--------------+
| city             | numCustomers | numShipments |
+------------------+--------------+--------------+
| Hollywood        |            1 |            4 |
| Iowa City        |            2 |            4 |
| Kelowna          |            2 |            4 |
| Lake Country     |            1 |            3 |
| Calgary          |            1 |            2 |
| Huntington Beach |            1 |            2 |
+------------------+--------------+--------------+


-- Q6: Return the top 5 products for state `'BC'` based on shipment revenue (`amount*price`) for the year `2021`. 

SELECT state, YEAR(shipdate) as year, pname, SUM(price*amount) AS revenue
FROM customer AS C, product AS P, shippedproduct AS SP, shipment AS S
WHERE C.cid = S.cid AND P.pid = SP.pid AND SP.sid = S.sid AND YEAR(shipdate) = 2021 AND state = 'BC'
GROUP BY state, year, pname
ORDER BY revenue DESC
LIMIT 5;

+-------+------+-------------------------+-----------+
| state | year | pname                   | revenue   |
+-------+------+-------------------------+-----------+
| BC    | 2021 | Sports Car              | 247000.00 |
| BC    | 2021 | Table                   |   6500.00 |
| BC    | 2021 | Textbook                |    500.00 |
| BC    | 2021 | Deluxe Sweet Collection |    326.50 |
| BC    | 2021 | Teddy Bear              |    103.92 |
+-------+------+-------------------------+-----------+


-- Q7: Return a list of products (id and name) along with the number of times it has been shipped, the total amount of all shipments, and the total value of all shipments. Only consider shipments after `March 10th, 2022`, and only show products if they have been shipped at least twice. Order by `totalValueShipped` descending.

SELECT P.pid, pname, COUNT(DISTINCT S.sid) AS numberOfTimesShipped, SUM(amount) AS totalAmountShipped, SUM(amount*price) AS totalValueShipped
FROM product AS P, shippedproduct AS SP, shipment AS S
WHERE P.pid = SP.pid AND S.sid = SP.sid AND shipdate > DATE '2022-03-10'
GROUP BY P.pid, pname
HAVING numberOfTimesShipped >= 2
ORDER BY totalValueShipped DESC;

+-----+-----------------+----------------------+--------------------+-------------------+
| pid | pname           | numberOfTimesShipped | totalAmountShipped | totalValueShipped |
+-----+-----------------+----------------------+--------------------+-------------------+
|   9 | Sports Car      |                    2 |                  2 |         247000.00 |
|   2 | Wooden Chair    |                    6 |                 38 |           3799.62 |
|  10 | Textbook        |                    2 |                  5 |           1250.00 |
|   1 | Swiss Chocolate |                    5 |                 21 |            692.79 |
|   8 | Table           |                    3 |                 38 |            113.62 |
|   4 | Chocolate Bar   |                    3 |                 17 |            101.15 |
|   3 | Teddy Bear      |                    2 |                  5 |             64.95 |
+-----+-----------------+----------------------+--------------------+-------------------+


-- Q8: Return pairs of products (only show a pair once) that appear together in the same shipment and have at least an `amount` of 2 in that shipment. Return the number of times the products appear together in a shipment ('numTogether'). Order by `numTogether` descending and first product name ascending.

SELECT P1.pname, P2.pname, COUNT(*) as numTogether
FROM shippedproduct AS SP1 JOIN shippedproduct AS SP2 ON SP1.sid=SP2.sid AND SP1.pid != SP2.pid
		JOIN product P1 ON SP1.pid=P1.pid JOIN product P2 ON SP2.pid=P2.pid
WHERE P1.pname < P2.pname AND SP1.amount >=2 AND SP2.amount >= 2
GROUP BY P1.pname, P2.pname
ORDER BY numTogether DESC, P1.pname;

+-------------------------+-------------------------+-------------+
| pname                   | pname                   | numTogether |
+-------------------------+-------------------------+-------------+
| Swiss Chocolate         | Wooden Chair            |           2 |
| Chocolate Bar           | Deluxe Sweet Collection |           1 |
| Chocolate Bar           | Sports Car              |           1 |
| Chocolate Bar           | Swiss Chocolate         |           1 |
| Chocolate Bar           | Wooden Chair            |           1 |
| Chocolate Bar           | Teddy Bear              |           1 |
| Chocolate Bar           | Desk                    |           1 |
| Chocolate Bar           | Table                   |           1 |
| Deluxe Sweet Collection | Sports Car              |           1 |
| Desk                    | Teddy Bear              |           1 |
| Swiss Chocolate         | Teddy Bear              |           1 |
| Swiss Chocolate         | Textbook                |           1 |
| Textbook                | Wooden Chair            |           1 |
+-------------------------+-------------------------+-------------+

-- Q9: Return a complete list of  products (`pid`, `pname`), the total number of shipments, and total shipped amount that they have been shipped to customers in `'IA'`.

SELECT P.pid, pname, numShipments, totalShippedAmount
FROM product AS P LEFT OUTER JOIN (SELECT SP.pid, COUNT(DISTINCT SP.sid) as numShipments, SUM(amount) as totalShippedAmount FROM shippedproduct AS SP LEFT OUTER JOIN shipment S ON S.sid=SP.sid LEFT OUTER JOIN customer C ON S.cid=C.cid WHERE state = 'IA' GROUP BY SP.pid) SP ON P.pid = SP.pid;

+-----+-------------------------+--------------+--------------------+
| pid | pname                   | numShipments | totalShippedAmount |
+-----+-------------------------+--------------+--------------------+
|   1 | Swiss Chocolate         |            2 |                 24 |
|   2 | Wooden Chair            |            2 |                 34 |
|   3 | Teddy Bear              |         NULL |               NULL |
|   4 | Chocolate Bar           |         NULL |               NULL |
|   5 | Desk                    |         NULL |               NULL |
|   6 | Table                   |            1 |                  5 |
|   7 | Deluxe Sweet Collection |         NULL |               NULL |
|   8 | Table                   |            1 |                 25 |
|   9 | Sports Car              |         NULL |               NULL |
|  10 | Textbook                |            1 |                  2 |
+-----+-------------------------+--------------+--------------------+



-- Q10: Return the customers who have more shipments than the average number of shipments per customer.

SELECT C.cid, cname, COUNT(sid) as numShipments
FROM customer C JOIN shipment S ON C.cid = S.cid
GROUP BY C.cid, cname
HAVING numShipments > (
	SELECT AVG(shipPerCustomer)
	FROM (
	SELECT cid, COUNT(*) as shipPerCustomer
	FROM shipment
	GROUP BY cid) C);

+-----+-----------------+--------------+
| cid | cname           | numShipments |
+-----+-----------------+--------------+
|   2 | Joe Smithsonian |            3 |
|   4 | Russell Johnson |            4 |
|   6 | Scott Charles   |            2 |
|  12 | Betty Bains     |            3 |
|  13 | Cindy Champion  |            2 |
|  15 | Elish Elias     |            3 |
+-----+-----------------+--------------+
